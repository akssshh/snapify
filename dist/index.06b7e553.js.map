{"mappings":"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","sources":["scripts/index.js"],"sourcesContent":["const imageWrapper = document.querySelector(\".grid\");\nconsole.log(imageWrapper);\nconst searchInput = document.querySelector(\"#search-input\");\nconst floatSearchInput = document.getElementById(\"float-search-input\");\nconst searchButton = document.querySelector(\"#search-button\");\n\nconst apiKey = \"12gZb1rLsA7rqFgAOuzVaj9Tyi1vpCmsoz1SLzgm_Os\";\nlet currentPage = 1;\nlet isFetching = false;\nlet hasMore = true;\nlet searchTerm = null;\n\nconst macyInstance = Macy({\n  container: imageWrapper,\n  breakAt: {\n    1600: 5,\n    1200: 4,\n    900: 3,\n    600: 2,\n    400: 1,\n  },\n  margin: {\n    x: 15,\n    y: 15,\n  },\n});\n\nconst fixStartUpBug = () => {\n  macyInstance.runOnImageLoad(function () {\n    macyInstance.recalculate(true, true);\n    var evt = document.createEvent(\"UIEvents\");\n    evt.initUIEvent(\"resize\", true, false, window, 0);\n    window.dispatchEvent(evt);\n  }, true);\n};\n\n\n// function to download image\n\nconst downloadImg = (imgUrl) => {\n  fetch(imgUrl)\n    .then((res) => res.blob())\n    .then((blob) => {\n      const a = document.createElement(\"a\");\n      a.href = URL.createObjectURL(blob);\n      a.download = new Date().getTime();\n      a.click();\n    })\n    .catch(() => alert(\"Failed to download image!\"));\n};\n\nconst generateHTML = (images) => {\n  console.log(images)\n  if (currentPage === 1) {\n    imageWrapper.innerHTML = \"\";\n  }\n\n  imageWrapper.innerHTML += images\n  \n    .map(\n      (img) =>\n        `\n        <div class=\"grid-item card\" >\n            <img src=\"${img.urls.small}\" class=\"fetch-img\" />\n            <div class=\"details\">\n              <div class=\"icons top-icons\">\n                <button class=\"share-btn\">\n                  <i class=\"uil uil-share-alt\"></i>\n                </button>\n              </div>\n                <div class=\"photographer\">\n                    <img src=\"${img.user.profile_image.small}\" class=\"photographer_img\" />\n                    <span>${img.user.name}</span>\n                </div>\n                <div class=\"\">\n                <button class=\"download-btn\" onclick=\"downloadImg('${img.urls.small}');\" >\n                  <i class=\"uil uil-import\"></i>\n                </button>\n              </div>\n            </div>\n        </div>\n      `\n    )\n    .join(\"\");\n  fixStartUpBug();\n};\n\nconst getImages = async (apiURL) => {\n  try {\n    const response = await fetch(apiURL, {\n      headers: { Authorization: `Client-ID ${apiKey}` },\n    });\n\n    if (!response.ok) {\n      throw new Error(\"Failed to load images!\");\n    }\n\n    const data = await response.json();\n    console.log(data);\n\n    let photos = [];\n\n    if (data.results) {\n      photos = data.results;\n    } else {\n      photos = data;\n    }\n    generateHTML(photos);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst loadImages = (title) => {\n  const searchTerm = title || searchInput.value || floatSearchInput.value;\n  let apiUrl = `https://api.unsplash.com/photos?client_id=${apiKey}&page=${currentPage}`;\n  apiUrl = searchTerm\n    ? `https://api.unsplash.com/search/photos?client_id=${apiKey}&page=${currentPage}&query=${searchTerm}`\n    : apiUrl;\n  getImages(apiUrl);\n  // currentPage++;\n};\n\nconst loadSearchImages = (e) => {\n  if (e.target.value === \"\") {\n    searchTerm = null;\n  } else {\n    searchTerm = e.target.value;\n  }\n\n  if (e.key === \"Enter\") {\n    currentPage = 1;\n    searchTerm = e.target.value;\n    imageWrapper.innerHTML = \"\";\n    loadImages(searchTerm);\n  }\n};\n\nsearchInput.addEventListener(\"keyup\", loadSearchImages);\nfloatSearchInput.addEventListener(\"keyup\", loadSearchImages);\n\nsearchButton.addEventListener(\"click\", () => {\n  imageWrapper.innerHTML = \"\";\n  loadImages();\n});\n\nloadImages();\n\nconst handleScroll = () => {\n  if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n    loadImages();\n    currentPage++;\n  }\n};\n\nwindow.addEventListener(\"scroll\", handleScroll);\n\n"],"names":[],"version":3,"file":"index.06b7e553.js.map","sourceRoot":"/__parcel_source_root/"}